services:
  db:
    image: mysql:8
    restart: always
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: degustware
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - degustware_network

  api:
    build: ./api
    restart: always
    container_name: api
    environment:
      MYSQL_HOST: db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
      MYSQL_DATABASE: degustware
    ports:
      - "3000:3000"  # API expõe a porta 3000 para o host
    depends_on:
      - db
    networks:
      - degustware_network

  front:
    build: ./front
    restart: always
    container_name: front
    networks:
      - degustware_network
    depends_on:
      - api
    # Não expõe a porta 80 para o host, o Nginx se encarrega disso

  nginx:
    image: nginx:alpine
    restart: always
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"  # Nginx vai expor a porta 80 para o host
    depends_on:
      - front
    networks:
      - degustware_network

volumes:
  db_data:

networks:
  degustware_network:
    driver: bridge
